{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormRedux","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","toLocaleLowerCase","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","s","contact","ProfileInfo","savePhoto","saveProfile","Preloader","profileInfo","imgWidth","src","photos","large","userPhoto","alt","target","files","length","initialValues","formData","then","Post","item","message","like","MyPosts","React","memo","postElements","posts","p","id","likeCount","AddPostReduxForm","addPost","newPostText","post","maxLenght10","maxLengthCreator","Field","name","component","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","content","store","ProfileContainer","userId","this","match","params","autorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.7a3c2099.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__3J-Cw\",\"imgWidth\":\"ProfileInfo_imgWidth__1_RSW\",\"contact\":\"ProfileInfo_contact__3720O\",\"formSummaryError\":\"ProfileInfo_formSummaryError__1g03A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3O_AZ\",\"post\":\"MyPosts_post__VIJtG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1sEgz\"};","import React, { useState, useEffect } from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => { setEditMode(true) }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n                </div>}\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                            autoFocus={true}\r\n                            onBlur={deactivateEditMode}\r\n                            value={status}\r\n                    />\r\n                </div>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls'\r\nimport { reduxForm } from 'redux-form';\r\n\r\nimport style from './ProfileInfo.module.css';\r\n\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>Save</button></div>\r\n        {error && <div className={style.formSummaryError}>{error}</div>}\r\n        <div>\r\n            <b>My name: </b> {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job: </b> {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills: </b>\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n\r\n        <div>\r\n            <b>About me: </b>\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n\r\n        </div>\r\n        <div>\r\n            <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key}>\r\n                    <b>{key}: {createField(key, \"contacts.\" + key.toLocaleLowerCase(), [], Input)}</b>\r\n                </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormRedux = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormRedux","import React, { useState } from 'react';\r\n\r\nimport s from './ProfileInfo.module.css';\r\n\r\nimport Preloader from '../../common/preloader/Preloader'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/ava-img.jpg'\r\nimport ProfileDataFormRedux from './ProfileDataForm';\r\n\r\n\r\nconst ProfileInfo = ({profile, savePhoto, isOwner, status, updateStatus, saveProfile }) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    if(!profile) {\r\n        return <Preloader />\r\n    } \r\n\r\n    const onPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n            setEditMode(false)}\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <div className={s.profileInfo}>\r\n            {/* <div>\r\n                <img src=\"https://images.pexels.com/photos/459225/pexels-photo-459225.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" alt=\"NBature\"/>\r\n            </div> */}\r\n            <div>\r\n                <div className={s.imgWidth}><img src={profile.photos.large || userPhoto} alt=\"vxc\" />\r\n                    {isOwner && <input type={\"file\"} onChange={onPhotoSelected} />}\r\n                </div>\r\n                {editMode ? <ProfileDataFormRedux initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                          : <ProfileData profile={profile} \r\n                                        isOwner={isOwner}\r\n                                        goToEditMode={() => setEditMode(true)} />}\r\n                <h2>ava + description</h2>\r\n                <ProfileStatusWithHooks status={status }\r\n                    updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return <div>\r\n        {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n        <div>\r\n            <b>My name: </b> {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job: </b> {profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills: </b> {profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n        <div>\r\n            <b>About me: </b> {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\nreturn <div className={s.contact}><b>{contactTitle}: </b>{contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://images.unsplash.com/photo-1550791970-613acd0edf84?ixlib=rb-1.2.1&auto=format&fit=crop&w=633&q=80\" alt=\"NBature\"/>\r\n            {props.message}\r\n            <div><span>Like: </span>{props.like}</div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let onAddPost = (value) => {\r\n        props.addPost(value.newPostText);\r\n    };\r\n\r\n    let postElements = props.posts.map(p => <Post key={p.id} message={p.message} like={p.likeCount} />);\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <h2>My Posts</h2>\r\n                <AddPostReduxForm onSubmit={onAddPost} />\r\n            <div className={s.post}>\r\n                {postElements} {/* Метод map вставить всі повідомленя які є в обєкті */}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nconst maxLenght10 = maxLengthCreator(10)\r\n\r\nconst AddPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name='newPostText'\r\n                   component={Textarea}\r\n                   placeholder='sign text'\r\n                   validate={[required, maxLenght10]} /><br />\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'newPostText'})(AddPostForm)\r\n\r\nexport default MyPosts;","// import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\n// import MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    \r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfile={props.saveProfile} />\r\n            <MyPostsContainer store={props.store} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profile-reducer'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\n\r\nclass ProfileContainer extends Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) this.refreshProfile()\r\n    }\r\n\r\n    render() {\r\n        \r\n\r\n        return (\r\n            <div>\r\n                < Profile { ...this.props } \r\n                    isOwner={!this.props.match.params.userId}\r\n                    profile={ this.props.profile } \r\n                    status={ this.props.status }\r\n                    updateStatus={this.props.updateStatus}\r\n                    savePhoto={this.props.savePhoto}\r\n                    saveProfile={this.props.saveProfile} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}