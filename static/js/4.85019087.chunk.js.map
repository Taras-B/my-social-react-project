{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","NavLink","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","messagePage","dialogsElements","dialogs","map","key","messageElements","messages","m","dialogsItems","value","console","log","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","massegesPage","dispatch","sendMessagesCreator","Component","RedirectComponent","this","Redirect","React"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,uFCanKC,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAACC,EAAA,EAAD,CAASC,GAAIP,GAAOD,EAAMS,QCDvBC,EAJC,SAACV,GACb,OAAO,yBAAKG,UAAWC,IAAEO,SAAUX,EAAMW,U,iCCkCvCC,EAAcC,YAAiB,IAiB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAfL,SAACf,GACpB,OACI,0BAAMiB,SAAUjB,EAAMkB,cAClB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACdC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBACLe,YAAY,gBAIf,6BAAK,6CAOHC,EAjDC,SAACzB,GACb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAzB,GAAM,OAAI,kBAAC,EAAD,CAAYI,KAAMJ,EAAOI,KAAMsB,IAAK1B,EAAOH,GAAIA,GAAIG,EAAOH,QAExG8B,EAAkBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAEhC,QAUlF,OACI,yBAAKC,UAAWC,IAAEyB,SACd,yBAAK1B,UAAWC,IAAE+B,cACbP,GAEL,yBAAKzB,UAAWC,IAAE6B,UACd,6BAAMD,GACN,6BACI,kBAAClB,EAAD,CAAqBG,SAflB,SAACmB,GAChBC,QAAQC,IAAI,SAAUF,GACtBpC,EAAMuC,YAAYH,EAAMI,uB,kECf5BC,EAA6B,SAACf,GAAD,MAAY,CACzCgB,OAAQhB,EAAMiB,KAAKD,S,OCyBRE,sBACXC,aArBkB,SAAAnB,GAClB,MAAO,CACHC,YAAaD,EAAMoB,iBAIF,SAAAC,GACrB,MAAO,CACHR,YAAa,SAACC,GACVO,EAASC,YAAoBR,UDXT,SAACS,GAAe,IACtCC,EADqC,iLAGnC,OAAIC,KAAKnD,MAAM0C,OACR,kBAACO,EAAcE,KAAKnD,OADG,kBAACoD,EAAA,EAAD,CAAU5C,GAAI,eAHT,GACX6C,IAAMJ,WAWtC,OAHmCJ,YAAQJ,EAARI,CAAoCK,KCa5DN,CAGbnB","file":"static/js/4.85019087.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3vgrk\",\"dialogsItems\":\"Dialogs_dialogsItems__28XdC\",\"active\":\"Dialogs_active__O2hUD\",\"messages\":\"Dialogs_messages__3ix4S\",\"message\":\"Dialogs_message__vJq7A\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form'; \r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.messagePage;\r\n\r\n    let dialogsElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n\r\n    let messageElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n    // let newMessageBody = state.newMessageBody;\r\n\r\n    let AddNewMessage =(value) => {\r\n        console.log('object', value)\r\n        props.sendMessage(value.newMessageBody)\r\n    }\r\n\r\n    // if(!props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElements}</div>\r\n                <div>\r\n                    <AddMessageFormRedux onSubmit={AddNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea}\r\n                validate={[required, maxLength50]} \r\n                name=\"newMessageBody\" \r\n                placeholder=\"Message you\" />\r\n            {/* <div><textarea value={newMessageBody} \r\n                                    onChange={onNewMessageChange}\r\n                                    placeholder='Enter your massege'></textarea></div> */}\r\n             <div><button>SEND</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    \r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    \r\n\r\n    return (\r\n       ConnectAuthRedirectComponent\r\n    )\r\n}\r\n","// import React from 'react';\r\n\r\nimport Dialogs from './Dialogs'\r\n\r\nimport { sendMessagesCreator } from '../../redux/masseges-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        messagePage: state.massegesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = dispatch => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessagesCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\n\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (AuthRedirectComponent)\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}