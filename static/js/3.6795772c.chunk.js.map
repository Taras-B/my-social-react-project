{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","profileInfo","imgWidth","src","photos","small","alt","Preloader","Post","item","message","like","MyPosts","React","memo","postElements","posts","map","p","key","id","likeCount","AddPostReduxForm","onSubmit","addPost","newPostText","post","maxLenght10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","content","store","ProfileContainer","userId","this","match","params","autorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.6795772c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__3J-Cw\",\"imgWidth\":\"ProfileInfo_imgWidth__1_RSW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3O_AZ\",\"post\":\"MyPosts_post__VIJtG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1sEgz\"};","import React, { useState, useEffect } from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => { setEditMode(true) }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n                </div>}\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                            autoFocus={true}\r\n                            onBlur={deactivateEditMode}\r\n                            value={status}\r\n                    />\r\n                </div>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/preloader/Preloader'\r\n// import ProfileStatus from './ProfileStatus' \r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    \r\n    return (\r\n        <div className={s.profileInfo}>\r\n            {/* <div>\r\n                <img src=\"https://images.pexels.com/photos/459225/pexels-photo-459225.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" alt=\"NBature\"/>\r\n            </div> */}\r\n            <div>\r\n                <div className={s.imgWidth}><img src={props.profile.photos.small} alt=\"vxc\" /></div>\r\n                <h2>ava + description</h2>\r\n                <ProfileStatusWithHooks status={props.status }\r\n                    updateStatus={props.updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://images.unsplash.com/photo-1550791970-613acd0edf84?ixlib=rb-1.2.1&auto=format&fit=crop&w=633&q=80\" alt=\"NBature\"/>\r\n            {props.message}\r\n            <div><span>Like: </span>{props.like}</div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n// let addPostActionCreator = () => {\r\n//     return { type: 'ADD-POST'}\r\n// }\r\n\r\n// let updateNewPostTextActionCreator = (text) => {\r\n//     return {type: 'UPDATE-NEW-POST-TEXT', newText: text}\r\n// }\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    // let newPostElement = React.createRef();   \r\n\r\n    let onAddPost = (value) => {\r\n        props.addPost(value.newPostText);\r\n    };\r\n\r\n    // let onPostChange = () => {\r\n    //     let text = newPostElement.current.value;\r\n    //     props.updateNewPostText(text);\r\n\r\n    // };\r\n\r\n    let postElements = props.posts.map(p => <Post key={p.id} message={p.message} like={p.likeCount} />);\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <h2>My Posts</h2>\r\n                <AddPostReduxForm onSubmit={onAddPost} />\r\n            <div className={s.post}>\r\n                {postElements} {/* Метод map вставить всі повідомленя які є в обєкті */}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nconst maxLenght10 = maxLengthCreator(10)\r\n\r\nconst AddPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name='newPostText'\r\n                   component={Textarea}\r\n                   placeholder='sign text'\r\n                   validate={[required, maxLenght10]} /><br />\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'newPostText'})(AddPostForm)\r\n\r\nexport default MyPosts;","// import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n// const MyPostsContaine = (props) => {\r\n    \r\n//     let state = props.store.getState();\r\n\r\n//     let addPost = () => {      \r\n//         props.store.dispatch(addPostActionCreator());\r\n//     };\r\n\r\n//     let onPostChange = (text) => {\r\n        \r\n//         let action = updateNewPostTextActionCreator(text);\r\n//         props.store.dispatch(action);\r\n\r\n//     };\r\n\r\n//     return (\r\n//         <MyPosts updateNewPostText={onPostChange}\r\n//         addPost={addPost}\r\n//         posts={state.profilePage.posts}\r\n//         newPostText={state.profilePage.newPostText}\r\n//         />\r\n//     )\r\n// }\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\n// import MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    \r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus} />\r\n            <MyPostsContainer store={props.store} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react'\r\nimport Profile from './Profile'\r\n// import * as axios from 'axios'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer'\r\nimport { withRouter } from 'react-router-dom'\r\n// import { withAuthRedirect } from '../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n// import { userAPI } from '../../api/api'\r\n\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        // debugger \r\n        let userId = this.props.match.params.userId\r\n\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n\r\n        // axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\r\n    }\r\n\r\n    render() {\r\n        \r\n\r\n        return (\r\n            <div>\r\n                < Profile { ...this.props } \r\n                    profile={ this.props.profile } \r\n                    status={ this.props.status }\r\n                    updateStatus={this.props.updateStatus} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer)\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\n// export default connect(mapStateToProps, {getUserProfile}) (WithUrlDataContainerComponent)"],"sourceRoot":""}