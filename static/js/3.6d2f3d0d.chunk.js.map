{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormRedux","reduxForm","form","handleSubmit","profile","error","onSubmit","Button","variant","size","type","className","style","formSummaryError","createField","Input","Textarea","Object","keys","contacts","map","key","toLocaleLowerCase","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","s","contact","ProfileInfo","savePhoto","saveProfile","profileInfo","Grid","container","item","xs","sm","imgWidth","src","photos","large","userPhoto","alt","component","display","target","files","length","initialValues","formData","then","Typography","Post","title","photo","message","like","deletePost","id","MyPosts","React","memo","postElements","posts","p","likeCount","AddPostReduxForm","addPost","newPostText","post","maxLenght10","maxLengthCreator","onSubmitSuccess","result","dispatch","reset","Field","name","placeholder","validate","required","color","MyPostsContainer","connect","state","profilePage","Profile","content","small","Preloader","ProfileContainer","userId","this","match","params","autorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.6d2f3d0d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__2WwD4\",\"imgWidth\":\"ProfileInfo_imgWidth__1cC6K\",\"contact\":\"ProfileInfo_contact__jAF_V\",\"formSummaryError\":\"ProfileInfo_formSummaryError__1AIck\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2l_ME\",\"post\":\"MyPosts_post__2FVKg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__N9eyJ\",\"title\":\"Post_title__-NSmo\",\"like\":\"Post_like__10bhY\"};","import React, { useState, useEffect } from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => { setEditMode(true) }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n                </div>}\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                            autoFocus={true}\r\n                            onBlur={deactivateEditMode}\r\n                            value={status}\r\n                    />\r\n                </div>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls'\r\nimport { reduxForm } from 'redux-form';\r\n\r\nimport style from './ProfileInfo.module.css';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><Button variant=\"contained\"\r\n            size=\"small\"\r\n            type='submit'>Save</Button></div>\r\n        {error && <div className={style.formSummaryError}>{error}</div>}\r\n        <div>\r\n            <b>My name: </b> {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job: </b> {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills: </b>\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n\r\n        <div>\r\n            <b>About me: </b>\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n\r\n        </div>\r\n        <div>\r\n            <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key}>\r\n                    <b>{key}: {createField(key, \"contacts.\" + key.toLocaleLowerCase(), [], Input)}</b>\r\n                </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormRedux = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormRedux","import React, { useState } from 'react';\r\n\r\nimport s from './ProfileInfo.module.css';\r\n\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/ava-img.jpg'\r\nimport ProfileDataFormRedux from './ProfileDataForm';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n\r\n\r\nconst ProfileInfo = ({profile, savePhoto, isOwner, status, updateStatus, saveProfile }) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    const onPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n            setEditMode(false)}\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <div className={s.profileInfo}>\r\n            {/* <div>\r\n                <img src=\"https://images.pexels.com/photos/459225/pexels-photo-459225.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" alt=\"NBature\"/>\r\n            </div> */}\r\n            <Grid container>\r\n                <Grid container >\r\n                    <Grid item xs={12} sm={6}>\r\n                        <div className={s.imgWidth}><img src={profile.photos.large || userPhoto} alt=\"vxc\" />\r\n                            {isOwner && <Button\r\n                                variant=\"contained\"\r\n                                component=\"label\"\r\n                                size=\"small\"\r\n                            >Upload File <input type={\"file\"} style={{ display: 'none' }} onChange={onPhotoSelected} /></Button>}\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} >\r\n                        {editMode ? <ProfileDataFormRedux initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                            : <ProfileData profile={profile}\r\n                                isOwner={isOwner}\r\n                                goToEditMode={() => setEditMode(true)} />}\r\n                    </Grid>\r\n                </Grid>\r\n                    <Grid>\r\n                        <Typography variant=\"subtitle1\">Status:</Typography>\r\n                        <ProfileStatusWithHooks status={status }\r\n                            updateStatus={updateStatus} />\r\n                    </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return <div>\r\n        {isOwner && <div><Button variant=\"contained\" size='small' onClick={goToEditMode}>Edit</Button></div>}\r\n        <div>\r\n            <b>My name: </b> {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job: </b> {profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills: </b> {profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n        <div>\r\n            <b>About me: </b> {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\nreturn <div className={s.contact}><b>{contactTitle}: </b>{contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport { Typography, Button } from '@material-ui/core';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.title}>\r\n                <img src={props.photo ? props.photo : \"https://images.unsplash.com/photo-1550791970-613acd0edf84?ixlib=rb-1.2.1&auto=format&fit=crop&w=633&q=80\"} alt=\"NBature\"/>\r\n                <Typography variant=\"body2\" display='inline'>\r\n                    {props.message}\r\n                </Typography>\r\n            </div>\r\n            <div>\r\n                <Typography variant=\"subtitle1\" display=\"inline\" className={s.like}>Like: {props.like}</Typography>\r\n                <Button variant=\"outlined\" size=\"small\" onClick={() => props.deletePost(props.id)} >Delete post</Button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field, reset } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { Button, Typography } from '@material-ui/core';\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let onAddPost = (value) => {\r\n        props.addPost(value.newPostText);\r\n    };\r\n\r\n    let postElements = props.posts.map(p => <Post key={p.id}\r\n                                            id={p.id}\r\n                                            deletePost={props.deletePost}\r\n                                            photo={props.photo}\r\n                                            message={p.message} \r\n                                            like={p.likeCount} />);\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <Typography variant=\"h4\">My Posts</Typography>\r\n                <AddPostReduxForm onSubmit={onAddPost} />\r\n            <div className={s.post}>\r\n                {postElements} {/* Метод map вставить всі повідомленя які є в обєкті */}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nconst maxLenght10 = maxLengthCreator(10)\r\n\r\nconst AddPostForm = (props) => {\r\n    \r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name='newPostText'\r\n                   component={Textarea}\r\n                   placeholder='sign text'\r\n                   validate={[required, maxLenght10]} /><br />\r\n            <Button color=\"secondary\" type='submit'>Add post</Button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('newPostText'))\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'newPostText', onSubmitSuccess: afterSubmit})(AddPostForm)\r\n\r\nexport default MyPosts;","// import React from 'react';\r\nimport { addPost, deletePost } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n    \r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        // profilePhoto: state.profilePage.profile.photos.small\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//     return {\r\n\r\n//         addPost: (newPostText) => {\r\n//             dispatch(addPost(newPostText));\r\n//         }\r\n//     }\r\n// }\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost, deletePost}) (MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\n// import MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport Preloader from '../common/preloader/Preloader';\r\n\r\nconst Profile = (props) => {\r\n    if(!props.profile) {\r\n        return <Preloader />\r\n    } \r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfile={props.saveProfile} />\r\n            <MyPostsContainer photo={props.profile.photos.small} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profile-reducer'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\n\r\nclass ProfileContainer extends Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) this.refreshProfile()\r\n    }\r\n\r\n    render() {\r\n        \r\n\r\n        return (\r\n            <div>\r\n                < Profile { ...this.props } \r\n                    isOwner={!this.props.match.params.userId}\r\n                    profile={ this.props.profile } \r\n                    status={ this.props.status }\r\n                    updateStatus={this.props.updateStatus}\r\n                    savePhoto={this.props.savePhoto}\r\n                    saveProfile={this.props.saveProfile} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}